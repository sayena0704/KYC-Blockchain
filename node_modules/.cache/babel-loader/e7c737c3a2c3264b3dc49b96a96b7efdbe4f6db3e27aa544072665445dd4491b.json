{"ast":null,"code":"var _jsxFileName = \"E:\\\\KYC\\\\etherum-ipfs-KYC\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Loginpage from \"./components/Loginpage\";\nimport Dashboard from \"./components/userComp/Dashboard\";\nimport UserInfo from \"./components/userComp/UserInfo\";\nimport Status from \"./components/userComp/Status\";\nimport ApplyForKYC from \"./components/userComp/ApplyForKYC\";\nimport Register from \"./components/Register\";\nimport Bankdashboard from \"./components/bankComp/Bankdashboard\";\nimport Bankapplication from \"./components/bankComp/Bankapplication\";\nimport Web3 from \"web3\";\nimport Bankinfo from \"./components/bankComp/Bankinfo\";\nimport configuration from \"./components/Kycsol.json\";\n\n// let contract, account;\n// let provider = window.ethereum;\n// const web3 = new Web3(provider);\n\n// const connect = async () => {\n//   if (typeof provider !== \"undefined\") {\n//     console.log(\"heelo\");\n//     await provider.request({ method: \"eth_requestAccounts\" });\n//     const accounts = await web3.eth.getAccounts();\n//     account = accounts[0];\n//     const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n//     const contractABI = configuration.abi;\n//     contract = new web3.eth.Contract(contractABI, contractAddress);\n//     console.log(\"connect successful----------------------\");\n//   } else {\n//     console.log(\"Non-ethereum browser detected.Please install Metamask\");\n//   }\n// };\n\n// window.addEventListener(\"load\", async () => {\n//   connect();\n//   console.log(\"on load login worked correctly\");\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setaccount] = useState(null);\n  const [contract, setcontract] = useState(null);\n  useEffect(() => async () => {\n    let provider = window.ethereum;\n    const web3 = new Web3(provider);\n    if (typeof provider !== \"undefined\") {\n      console.log(\"heelo\");\n      await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const accounts = await web3.eth.getAccounts();\n      setaccount(accounts[0]);\n      const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n      const contractABI = configuration.abi;\n      let tempcontract = new web3.eth.Contract(contractABI, contractAddress);\n      setcontract(tempcontract);\n      console.log(\"connect successful----------------------\");\n    } else {\n      console.log(\"Non-ethereum browser detected.Please install Metamask\");\n    }\n  }, []);\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Loginpage, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/dashboard\",\n    element: /*#__PURE__*/_jsxDEV(Dashboard, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/dashboard/userinfo\",\n    element: /*#__PURE__*/_jsxDEV(UserInfo, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/dashboard/status\",\n    element: /*#__PURE__*/_jsxDEV(Status, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/dashboard/apply_for_kyc\",\n    element: /*#__PURE__*/_jsxDEV(ApplyForKYC, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/register\",\n    element: /*#__PURE__*/_jsxDEV(Register, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/bankdashboard\",\n    element: /*#__PURE__*/_jsxDEV(Bankdashboard, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, {\n    path: \"/bankinfo\",\n    element: /*#__PURE__*/_jsxDEV(Bankinfo, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/bankapplication\",\n    element: /*#__PURE__*/_jsxDEV(Bankapplication, {\n      account_prop: account,\n      contract_prop: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }]);\n  console.log(`halala ${account} ${contract}`);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"1uTjpEkWK1MirT2ljuB+IuTyMgs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","createBrowserRouter","RouterProvider","Loginpage","Dashboard","UserInfo","Status","ApplyForKYC","Register","Bankdashboard","Bankapplication","Web3","Bankinfo","configuration","jsxDEV","_jsxDEV","App","_s","account","setaccount","contract","setcontract","provider","window","ethereum","web3","console","log","request","method","accounts","eth","getAccounts","contractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","contractABI","abi","tempcontract","Contract","router","path","element","account_prop","contract_prop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/KYC/etherum-ipfs-KYC/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\r\nimport Loginpage from \"./components/Loginpage\";\r\nimport Dashboard from \"./components/userComp/Dashboard\";\r\nimport UserInfo from \"./components/userComp/UserInfo\";\r\nimport Status from \"./components/userComp/Status\";\r\nimport ApplyForKYC from \"./components/userComp/ApplyForKYC\";\r\nimport Register from \"./components/Register\";\r\nimport Bankdashboard from \"./components/bankComp/Bankdashboard\";\r\nimport Bankapplication from \"./components/bankComp/Bankapplication\";\r\nimport Web3 from \"web3\";\r\nimport Bankinfo from \"./components/bankComp/Bankinfo\";\r\nimport configuration from \"./components/Kycsol.json\";\r\n\r\n// let contract, account;\r\n// let provider = window.ethereum;\r\n// const web3 = new Web3(provider);\r\n\r\n// const connect = async () => {\r\n//   if (typeof provider !== \"undefined\") {\r\n//     console.log(\"heelo\");\r\n//     await provider.request({ method: \"eth_requestAccounts\" });\r\n//     const accounts = await web3.eth.getAccounts();\r\n//     account = accounts[0];\r\n//     const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n//     const contractABI = configuration.abi;\r\n//     contract = new web3.eth.Contract(contractABI, contractAddress);\r\n//     console.log(\"connect successful----------------------\");\r\n//   } else {\r\n//     console.log(\"Non-ethereum browser detected.Please install Metamask\");\r\n//   }\r\n// };\r\n\r\n// window.addEventListener(\"load\", async () => {\r\n//   connect();\r\n//   console.log(\"on load login worked correctly\");\r\n// });\r\n\r\nfunction App() {\r\n  const [account, setaccount] = useState(null);\r\n  const [contract, setcontract] = useState(null);\r\n\r\n  useEffect(\r\n    () => async () => {\r\n      let provider = window.ethereum;\r\n      const web3 = new Web3(provider);\r\n      if (typeof provider !== \"undefined\") {\r\n        console.log(\"heelo\");\r\n        await provider.request({ method: \"eth_requestAccounts\" });\r\n        const accounts = await web3.eth.getAccounts();\r\n        setaccount(accounts[0]);\r\n        const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n        const contractABI = configuration.abi;\r\n        let tempcontract = new web3.eth.Contract(contractABI, contractAddress);\r\n        setcontract(tempcontract);\r\n        console.log(\"connect successful----------------------\");\r\n      } else {\r\n        console.log(\"Non-ethereum browser detected.Please install Metamask\");\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: \"/\",\r\n      element: <Loginpage account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/dashboard\",\r\n      element: <Dashboard account_prop={account} contract_prop={contract} />,\r\n    },\r\n\r\n    {\r\n      path: \"/dashboard/userinfo\",\r\n      element: <UserInfo account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/dashboard/status\",\r\n      element: <Status account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/dashboard/apply_for_kyc\",\r\n      element: <ApplyForKYC account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/register\",\r\n      element: <Register account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/bankdashboard\",\r\n      element: (\r\n        <Bankdashboard account_prop={account} contract_prop={contract} />\r\n      ),\r\n    },\r\n    {\r\n      path: \"/bankinfo\",\r\n      element: <Bankinfo account_prop={account} contract_prop={contract} />,\r\n    },\r\n    {\r\n      path: \"/bankapplication\",\r\n      element: (\r\n        <Bankapplication account_prop={account} contract_prop={contract} />\r\n      ),\r\n    },\r\n  ]);\r\n\r\n  console.log(`halala ${account} ${contract}`);\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}