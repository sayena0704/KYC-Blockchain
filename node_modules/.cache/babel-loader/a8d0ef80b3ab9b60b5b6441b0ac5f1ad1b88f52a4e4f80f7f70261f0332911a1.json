{"ast":null,"code":"var _jsxFileName = \"E:\\\\KYC\\\\etherum-ipfs-KYC\\\\src\\\\components\\\\Loginpage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Loginpage.css\";\nimport Tp from \"./userComp/Tp\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = props => {\n  _s();\n  const contract = props.contract_prop;\n  const account = props.account_prop;\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    const provider = window.ethereum;\n    console.log(typeof provider);\n    if (typeof provider !== \"undefined\") {\n      try {\n        console.log(account);\n        let isuser = await contract.methods.mp_isUser(account).call();\n        isuser = Number(isuser);\n        console.log(isuser);\n        console.log(`Is user already present ${isuser}`);\n        if (isuser) {\n          navigate(\"/dashboard\");\n        } else {\n          let isbank = await contract.methods.mp_bank_name(account).call();\n          if (isbank.length > 0) {\n            navigate(\"/bankdashboard\");\n          } else {\n            navigate(\"/register\");\n          }\n        }\n      } catch (e) {\n        console.log(e);\n        alert(\"Check the connectivity of metamask\");\n      }\n    } else {\n      console.log(\"Non-ethereum browser detected.Please install Metamask\");\n      alert(\"install metamask\");\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login through Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\n\n// import Web3 from \"web3\";\n// import configuration from \"./Kycsol.json\";\n\n// let provider = window.ethereum;\n// const web3 = new Web3(provider);\n\n// const connect = async () => {\n//   if (typeof provider !== \"undefined\") {\n//     console.log(\"heelo\");\n//     await provider.request({ method: \"eth_requestAccounts\" });\n//     const accounts = await web3.eth.getAccounts();\n//     console.log(\"heelo2\");\n\n//     account = accounts[0];\n//     const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n//     const contractABI = configuration.abi;\n//     contract = new web3.eth.Contract(contractABI, contractAddress);\n//     console.log(\"connect successful\");\n//   } else {\n//     console.log(\"Non-ethereum browser detected.Please install Metamask\");\n//   }\n// };\n\n// window.addEventListener(\"load\", async () => {\n//   connect();\n\n//   console.log(\"on load login worked correctly\");\n// });\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","Tp","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","props","_s","contract","contract_prop","account","account_prop","navigate","handleLogin","provider","window","ethereum","console","log","isuser","methods","mp_isUser","call","Number","isbank","mp_bank_name","length","e","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["E:/KYC/etherum-ipfs-KYC/src/components/Loginpage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Loginpage.css\";\r\nimport Tp from \"./userComp/Tp\";\r\n\r\nconst LoginPage = (props) => {\r\n  const contract = props.contract_prop;\r\n  const account = props.account_prop;\r\n  const navigate = useNavigate();\r\n  const handleLogin = async () => {\r\n    const provider = window.ethereum;\r\n    console.log(typeof provider);\r\n    if (typeof provider !== \"undefined\") {\r\n      try {\r\n        console.log(account);\r\n        let isuser = await contract.methods.mp_isUser(account).call();\r\n        isuser = Number(isuser);\r\n        console.log(isuser);\r\n        console.log(`Is user already present ${isuser}`);\r\n        if (isuser) {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          let isbank = await contract.methods.mp_bank_name(account).call();\r\n          if (isbank.length > 0) {\r\n            navigate(\"/bankdashboard\");\r\n          } else {\r\n            navigate(\"/register\");\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n        alert(\"Check the connectivity of metamask\");\r\n      }\r\n    } else {\r\n      console.log(\"Non-ethereum browser detected.Please install Metamask\");\r\n      alert(\"install metamask\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tp></Tp>\r\n      <div className=\"login-container\">\r\n        <h1>Login Page</h1>\r\n        <div className=\"login-content\">\r\n          <p>Login through Metamask</p>\r\n          <button className=\"login-button\" onClick={handleLogin}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n// import Web3 from \"web3\";\r\n// import configuration from \"./Kycsol.json\";\r\n\r\n// let provider = window.ethereum;\r\n// const web3 = new Web3(provider);\r\n\r\n// const connect = async () => {\r\n//   if (typeof provider !== \"undefined\") {\r\n//     console.log(\"heelo\");\r\n//     await provider.request({ method: \"eth_requestAccounts\" });\r\n//     const accounts = await web3.eth.getAccounts();\r\n//     console.log(\"heelo2\");\r\n\r\n//     account = accounts[0];\r\n//     const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n//     const contractABI = configuration.abi;\r\n//     contract = new web3.eth.Contract(contractABI, contractAddress);\r\n//     console.log(\"connect successful\");\r\n//   } else {\r\n//     console.log(\"Non-ethereum browser detected.Please install Metamask\");\r\n//   }\r\n// };\r\n\r\n// window.addEventListener(\"load\", async () => {\r\n//   connect();\r\n\r\n//   console.log(\"on load login worked correctly\");\r\n// });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}